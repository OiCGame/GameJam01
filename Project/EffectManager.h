#pragma once
#include "Effect.h"

constexpr MofU32 EffectMaxCount = 64;

// ********************************************************************************
/// <summary>
/// エフェクトの種類
/// </summary>
// ********************************************************************************
enum class EffectType
{
	Barrier,
	Explosion,
	Count,
};

// ********************************************************************************
/// <summary>
/// エフェクト管理クラス
/// </summary>
// ********************************************************************************
class CEffectManager
{
private:

	CEffect m_EffectArray[static_cast<int>(EffectType::Count)][EffectMaxCount]; //! 管理するエフェクト

	// ********************************************************************************
	/// <summary>
	/// コンストラクタ
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	CEffectManager(void);

public:
	
	// ********************************************************************************
	/// <summary>
	/// デストラクタ
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	~CEffectManager(void);

	// ********************************************************************************
	/// <summary>
	/// 初期化
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	void Initialize(void);

	// ********************************************************************************
	/// <summary>
	/// 更新
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	void Update(void);

	// ********************************************************************************
	/// <summary>
	/// 描画
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	void Render(void);

	// ********************************************************************************
	/// <summary>
	/// 解放
	/// </summary>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	void Release(void);

	// ********************************************************************************
	/// <summary>
	/// エフェクトの開始
	/// </summary>
	/// <param name="type">エフェクトの種類</param>
	/// <param name="pos">表示する座標</param>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	void Start(const EffectType& type, const Vector2& pos);

	// ********************************************************************************
	/// <summary>
	/// シングルトンの取得
	/// </summary>
	/// <returns>シングルトン</returns>
	/// <created>いのうえ,2020/11/28</created>
	/// <changed>いのうえ,2020/11/28</changed>
	// ********************************************************************************
	static CEffectManager& Singleton(void);
};

#define g_EffectManager CEffectManager::Singleton()